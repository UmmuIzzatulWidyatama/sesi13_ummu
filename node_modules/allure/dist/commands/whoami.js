import { readConfig } from "@allurereport/core";
import { AllureServiceClient, KnownError } from "@allurereport/service";
import { green, red } from "yoctocolors";
import { createCommand } from "../utils/commands.js";
import { logError } from "../utils/logs.js";
export const WhoamiCommandAction = async (options) => {
    const { config: configPath, cwd } = options ?? {};
    const config = await readConfig(cwd, configPath);
    if (!config?.allureService?.url) {
        console.error(red("No Allure Service URL is provided. Please provide it in the `allureService.url` field in the `allure.config.js` file"));
        process.exit(1);
        return;
    }
    const serviceClient = new AllureServiceClient(config.allureService);
    try {
        const profile = await serviceClient.profile();
        const lines = [`You are logged in as "${profile.email}"`];
        if (config.allureService?.project) {
            lines.push(`Current project is "${config.allureService.project}"`);
        }
        console.info(green(lines.join("\n")));
    }
    catch (error) {
        if (error instanceof KnownError) {
            console.error(red(error.message));
            process.exit(1);
            return;
        }
        await logError("Failed to get profile due to unexpected error", error);
        process.exit(1);
    }
};
export const WhoamiCommand = createCommand({
    name: "whoami",
    description: "Prints information about current user",
    options: [
        [
            "--config, -c <file>",
            {
                description: "The path Allure config file",
            },
        ],
        [
            "--cwd <cwd>",
            {
                description: "The working directory for the command to run (default: current working directory)",
            },
        ],
    ],
    action: WhoamiCommandAction,
});
